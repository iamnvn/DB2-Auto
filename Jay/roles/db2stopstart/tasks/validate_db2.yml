---
    - name: Copy - Scrips to target node
      copy: src="{{ item }}" dest="{{ scriptsdir }}/{{ item }}" mode=0755
      loop: "{{ valscripts }}"
      tags: copyscripts

    - shell: |
              DB2INST="{{ db2inst }}"
              if [[ "${DB2INST}" == "all" ]]; then
                /usr/local/bin/db2ls |  tail -n +4 | awk '{print $1}' | while read DBPATH; do $DBPATH/instance/db2ilist; done > /tmp/db2ilist.lst
              else
                echo "${DB2INST}" > /tmp/db2ilist.lst;
              fi
              chmod 777 /tmp/db2ilist.lst;
              if [[ -f /tmp/db2-role.txt ]]; then sudo rm -f /tmp/db2-role.txt; fi
              if [[ -f /tmp/db2-standby.txt ]]; then sudo rm -f /tmp/db2-standby.txt; fi
              if [[ -f /tmp/validate_db2.sh.log ]]; then sudo rm -f /tmp/validate_db2.sh.log; fi
              if [[ -f /tmp/db2_val_ha.sh.log ]]; then sudo rm -f /tmp/db2_val_ha.sh.log; fi
              if [[ -f /tmp/HADR_roles.txt ]]; then sudo rm -f /tmp/HADR_roles.txt; fi
              if [[ -f /tmp/cur_db_role.txt ]]; then sudo rm -f /tmp/cur_db_role.txt; fi
              cat /tmp/db2ilist.lst | grep -v db2cln
      register: db2ilist
      tags: always

    - name: "Info - Action {{ dbaction }} will be performed on following Db2 Instance(s)"
      debug: msg="{{ db2ilist.stdout_lines }}"
      when: dbaction == "status"
      tags: listinst,info

    - set_fact:
        curtmstmp: "{{ ansible_date_time.iso8601 }}"

    - name: Validate DB2 Instance and Databases
      shell: |
             perl -p -i -e 's/\r//g' {{ scriptsdir }}/db2_val.sh
             {{ scriptsdir }}/db2_val.sh >> /tmp/validate_db2.sh.log_{{ curtmstmp }}
             chmod -f 777 /tmp/validate_db2.sh.log_{{ curtmstmp }}
      register: chm
      failed_when: chm.rc > 1 
      become: true
      become_user: "{{ item }}"
      loop: "{{ db2ilist.stdout_lines }}"
      tags: validatedb

    - command: cat /tmp/validate_db2.sh.log
      register: cmdout

    - name: Validate HADR and TSA
      shell: |
              perl -p -i -e 's/\r//g' {{ scriptsdir }}/validateHADRTSA.sh
              {{ scriptsdir }}/validateHADRTSA.sh >> /tmp/db2_val_ha.sh.log_{{ curtmstmp }}
              chmod -f 777 /tmp/db2_val_ha.sh.log_{{ curtmstmp }}
      register: chm
      failed_when: chm.rc > 1
      become: true
      become_user: "{{ item }}"
      loop: "{{ db2ilist.stdout_lines }}"
      tags: validateha

    - command: cat /tmp/db2_val_ha.sh.log_{{ curtmstmp }}
      register: cmdoutha

    - name: Remove - Validation Scripts
      file: path="{{ scriptsdir }}/{{ item }}" state=absent
      loop: "{{ valscripts }}"
      tags: cleanup

    - name: Display - Instance and Database Validation Output
      debug: msg="{{ cmdout.stdout_lines }}"
      tags: output

    - name: Display - HADR TSA Validation Output
      debug: msg="{{ cmdoutha.stdout_lines }}"
      tags: outputha