---
## pre-req tasks

 - set_fact:
      inst: "{{ createinst['instid'] }}"
      fenc: "{{ createinst['fencid'] }}"
      instgrp: "{{ createinst['instgrp'] }}"
   tags: always

 - name: Create - Group
   group:
    name: "{{ instgrp }}"
    state: present
    gid: 0507
   tags: groupadd

 - name: Create Instance and Fenced Users
   user:
    name: "{{ item }}"
    home: "/db/home/{{ item }}"
    password: abcd1234
    shell: /bin/bash
    #uid: 1040
    group: dba
   loop: 
     - "{{ inst }}"
     - "{{ fenc }}"
   tags: useradd

 - name: Create - Directory Structure
   file: path="{{ item }}" state=directory owner=root group="{{ createinst['instgrp'] }}" mode=0777
   loop: "{{ dirstocreate }}"
   tags: createdirs

 - name: Create - DB2 Related Directories.
   file: path="{{ item }}" state=directory owner=root group="{{ createinst['instgrp'] }}" mode=0775
   loop: "{{ db2dirs }}"
   tags: createdirs

 - name: Create - DB2 Instance Home Directory.
   file: path="/db/home" state=directory owner="{{ createinst['instid'] }}" group="{{ createinst['instgrp'] }}" mode=0755
   tags: createdirs

 - name: Add - Instance port number to /etc/services
   lineinfile:
    path: /etc/services
    line: "db2c_{{ createinst['instid'] }}    {{ createinst['instport'] }}/tcp               #DB2 Instance Communication port"
   tags: addport

 #- name: Copy - Comman functions and variables file
 #  template: src="templates/include_db2.sh" dest="/tmp/include_db2" mode=0777
 #  tags: always

 - name: Copy and untar binaries block
   block:
    - name: Copy - DB2 Binaries
      synchronize: src="{{ db2sw }}" dest="{{ binariesdir }}" mode=push
      delegate_to: "{{ swsrchost }}"

    - name: Unzip - DB2 Binaries
      unarchive: src="{{ binariesdir }}/{{ swtocopy }}" dest="{{ binariesdir }}" remote_src=yes
      when: ansible_distribution != "AIX"

    - name: Unzip - DB2 Binaries
      shell: cd "{{ binariesdir }}";tar -xzvf "{{ binariesdir }}/{{ swtocopy }}"
      when: ansible_distribution == "AIX"
         
   when: copybinaries | bool
   tags: copybinaries 

 #- name: Copy - DB2 Standard Scrips
 #  copy: src="{{ item }}" dest="{{ scriptsdir }}/{{ item }}" mode=0755
 #  loop: "{{ scriptstocopy }}"
 #  tags: copyscripts