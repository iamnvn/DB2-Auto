- name: Checking - Current db2level and Requested db2level
  shell: |
          . $HOME/sqllib/db2profile
          DV2VR=$(db2level | grep -i "Informational tokens" | awk '{print $5}')
          INPUTVER="{{ tgtversion }}"
          INST="{{ item }}"
          if [[ "${DV2VR:0:5}" != "${INPUTVER:0:5}" ]]; then
            echo "Instance = ${INST}, Cur_db2level = ${DV2VR}, Req_db2level = ${INPUTVER} - INVALID FOR FP UPGRADE" >> /tmp/notvalidinst.lst
          else
            echo "${INST}" >> /tmp/inst.final
          fi
          chmod -f 777 /tmp/validation.txt; chmod -f 777 /tmp/notvalidinst.lst; chmod -f 777 /tmp/inst.final
  register: instfinal
  become: true
  become_user: "{{ item }}"
  loop: "{{ db2ilistall.stdout_lines }}"
  failed_when: cmdout.rc > 1
  tags: always

- name: "Checking - Installation Directory {{ db2vpath }} Empty or not"
  shell: |
          DB2VPATH="{{ db2vpath }}"
          if [[ $(ls -A ${DB2VPATH}) ]]; then
            echo "New FP Installation Directory - ${DB2VPATH} Not Empty! Please Check" > /tmp/validation.txt
            chmod -f 777 /tmp/validation.txt
          fi
  register: cmdout
  failed_when: cmdout.rc > 1
  when: installupdate == "install" or installupdate == "install_update"
  tags: always
  
- command: cat /tmp/validation.txt
  register: output
  failed_when: output.rc > 1
  tags: always

- name: ERROR - NEW FP Installation Dir not Empty
  fail: msg="{{ output.stdout_lines }}"
  when: output.stdout != ''
  tags: always

- command: cat /tmp/notvalidinst.lst
  register: notvalidinst
  tags: always

- command: cat /tmp/inst.final
  register: instfinal
  tags: always

- set_fact:
    db2ilist: "{{ instfinal }}"
  tags: always

- name: "Info - DB2 Fixpack \"DB2 {{ tgtversion }}\" will be performed on below Db2 Instance(s)"
  debug: msg="{{ db2ilist.stdout_lines }}"
  tags: listinst,info,always

- name: "WARNING - DB2 FP Upgrade Skipping for below Instance(s) resubmit job with correct level"
  debug: msg="{{ notvalidinst.stdout_lines }}"
  when: notvalidinst.stdout != ''
  tags: always