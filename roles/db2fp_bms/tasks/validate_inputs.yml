- name: Checking - Current db2level and Requested db2level
  shell: |
          . $HOME/sqllib/db2profile
          DV2VR=$(db2level | grep -i "Informational tokens" | awk '{print $5}')
          INPUTVER="{{ tgtversion }}"
          INST="{{ item }}"
          
          if [[ "${DV2VR:0:5}" != "${INPUTVER}" ]]; then
            echo "Input Version = ${INPUTVER} and Current Instance(${INST}) Version = ${DV2VR:0:5} NOT MATCHED, Fixpack upgrade not possible" >> /tmp/validation.txt
            #exit 2
          fi
          chmod -f 777 /tmp/validation.txt
  register: cmdout
  become: true
  become_user: "{{ item }}"
  loop: "{{ db2ilist.stdout_lines }}"
  failed_when: cmdout.rc > 1
  tags: prevalidation

- name: "Checking - Installation Directory {{ db2vpath }} Empty or not"
  shell: |
          DB2VPATH="{{ db2vpath }}"
          if [[ $(ls -A ${DB2VPATH}) ]]; then
            echo "Installation Directory ${DB2VPATH} Not Empty! Please Check" >> /tmp/validation.txt
            chmod -f 777 /tmp/validation.txt
          fi
  failed_when: cmdout.rc > 1
  tags: prevalidation

- command: cat /tmp/validation.txt
  register: output
  failed_when: output.rc > 1

- name: "ERROR - Current db2level and Requested db2level NOT MATCHED or Installation Directory \"{{ db2vpath }}\" Not Empty"
  fail: msg="{{ output.stdout_lines }}"
  when: output.stdout != ''